version: "3.3"
services:
  ############################
  # Application
  ############################
  advert_portal:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      DB_USER: root
      DB_PASSWORD: root
      DB_URL: db
    depends_on:
      - db
  ############################
  # Database
  ############################
  db:
    image: mysql:8.0.26
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - /home/ola/mysql:/var/lib/mysql


  ############################
  # Amazon AWS S3
  ############################
  s3:
    image: quay.io/minio/minio
    ports:
      - "9000:9000"
    volumes:
      - /home/ola/minio:/data
    environment:
      MINIO_ROOT_USER: minio_root_user
      MINIO_ROOT_PASSWORD: minio_root_password
    command: minio server /data


  ############################
  # Elasticsearch
  ############################
  es:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
      environment:
        - bootstrap.memory_lock=true
        - discovery.type=single-node
      volumes:
        - /home/ola/elastic:/usr/share/elasticsearch/data
        - /home/ola/esplugins:/usr/share/elasticsearch/plugins
      ports:
        - "9200:9200"

# w kontenerze należy dodatkowo wykonać komendę:
# docker exec -i -t <nazwa kontenerea> /usr/share/elasticsearch/bin/elasticsearch-plugin install ingest-attachment
# następnie wykonać restart docker-compose i ponownie postawić serwis elasticsearcha
