plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}


group = 'com.app'
version = '1.0'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-elasticsearch', version: '2.6.1'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'com.auth0', name: 'java-jwt', version: '3.18.1'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.7'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
	implementation group: 'org.springframework.boot', name:  'spring-boot-starter-validation'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.163'
	runtime 'mysql:mysql-connector-java:8.0.25'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile group: 'org.json', name: 'json', version: '20180813'
	testImplementation(platform('org.junit:junit-bom:5.8.2'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	testImplementation group: 'com.h2database', name: 'h2', version: '2.1.210'
	testCompile("org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.2")
	testImplementation group: 'org.mockito', name: 'mockito-inline', version: '2.7.21'


}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.7"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/dto/*",
					"**/model/*",
					"**/document",
					"**/controller/*",
					"**/helper/*",
					"**/config/*",
					"**/enums/*",
					"**/security/*"
			])
		}))
	}
}
